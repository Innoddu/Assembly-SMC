program QuadTable;

#include( "stdlib.hhf" );

static
iDataValue : int32 := 0; 
begin QuadTable;

stdout.put( "Gimme a starting value: " );
stdin.get( iDataValue );

mov( iDataValue, EBX );
mov( iDataValue, ECX );


stdout.put( "Quad Table ", nl );


rol( 0, EBX );
lahf();
xor( %0000_0001, AH );
stdout.puti32( EBX );
stdout.put(": ");


rol( 2, EBX );
lahf();
xor( %0000_0001, AH );
stdout.puti32( EBX );
stdout.put("  ");

rol( 2, EBX );
lahf();
xor( %0000_0001, AH );
stdout.puti32( EBX );
stdout.put("  ");


stdout.put(nl);
add(1,ECX);
mov(ECX,EBX);
stdout.puti32(EBX);


rol( 0, EBX );
lahf();
xor( %0000_0001, AH );
add( AH, DH );
stdout.put(": ");


rol( 2, EBX );
lahf();
xor( %0000_0001, AH );
stdout.puti32( EBX );
stdout.put("  ");

rol( 2, EBX );
lahf();
xor( %0000_0001, AH );
stdout.puti32( EBX );
stdout.put("  ");


stdout.put(nl);
add(1,ECX);
mov(ECX,EBX);
stdout.puti32(EBX);

rol( 0, EBX );
lahf();
xor( %0000_0001, AH );
stdout.put(": ");


rol( 2, EBX );
lahf();
xor( %0000_0001, AH );
stdout.puti32( EBX );
stdout.put("  ");

rol( 2, EBX );
lahf();
xor( %0000_0001, AH );
stdout.puti32( EBX );
stdout.put("  ");



end QuadTable;